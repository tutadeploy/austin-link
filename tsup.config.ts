import { defineConfig } from "tsup";
import type { BuildOptions } from "esbuild";

export default defineConfig({
  entry: ["src/main.ts"],
  format: ["cjs"],
  dts: true,
  splitting: false,
  sourcemap: true,
  clean: true,
  outDir: "dist",
  target: "node18",
  noExternal: [
    "@nestjs/websockets",
    "@nestjs/core",
    "@nestjs/common",
    "@nestjs/platform-socket.io",
    "@nestjs/microservices",
    "@nestjs/microservices/microservices-module",
    "@fastify/static",
    "socket.io",
    "reflect-metadata",
    "rxjs",
    "class-validator",
    "class-transformer",
    "@nestjs/config",
    "@nestjs/platform-express",
    "@nestjs/serve-static",
    "axios",
  ],
  external: [
    "path",
    "fs",
    "http",
    "https",
    "url",
    "util",
    "stream",
    "zlib",
    "net",
    "tls",
    "crypto",
    "events",
    "buffer",
    "querystring",
    "string_decoder",
    "punycode",
    "process",
    "assert",
    "constants",
    "os",
    "child_process",
    "@nestjs/microservices",
    "@nestjs/microservices/microservices-module",
    "kafkajs",
    "ioredis",
    "nats",
    "@grpc/grpc-js",
    "@grpc/proto-loader",
    "mqtt",
    "amqplib",
    "amqp-connection-manager",
  ],
  esbuildOptions(options: BuildOptions): BuildOptions {
    options.platform = "node";
    options.target = "node18";
    return options;
  },
});
